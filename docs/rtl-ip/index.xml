<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RTL IP on </title>
    <link>https://egghwan.github.io/docs/rtl-ip/</link>
    <description>Recent content in RTL IP on </description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 08 Sep 2023 05:12:51 +0100</lastBuildDate>
    <atom:link href="https://egghwan.github.io/docs/rtl-ip/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>lib_sync_fifo.v</title>
      <link>https://egghwan.github.io/docs/rtl-ip/lib_sync_fifo/</link>
      <pubDate>Mon, 22 May 2023 00:44:31 +0100</pubDate>
      <guid>https://egghwan.github.io/docs/rtl-ip/lib_sync_fifo/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;h2 id=&#34;모듈-설명&#34;&gt;모듈 설명 &lt;a href=&#34;#%eb%aa%a8%eb%93%88-%ec%84%a4%eb%aa%85&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Synchronous FIFO에 대한 개념을 설명하고 RTL로 구현하는 과정을 기술한다.&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-synchronous-fifo-란&#34;&gt;1. Synchronous FIFO 란? &lt;a href=&#34;#1-synchronous-fifo-%eb%9e%80&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;FIFO(First-In-First-Out)의 줄임말이다. 말 그대로 먼저 들어온 데이터가 먼저 나간다는 뜻이다.&lt;/p&gt;&#xA;&lt;p&gt;FIFO는 기본적으로 읽기 포인터와 쓰기 포인터로 동작한다. 아래 예제를 통해 FIFO의 동작원리를 알아보자.&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-synchronous-fifo-예제&#34;&gt;2. Synchronous FIFO 예제 &lt;a href=&#34;#2-synchronous-fifo-%ec%98%88%ec%a0%9c&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;DEPTH가 8인 FIFO를 예제로 설명을 진행한다. DEPTH란 FIFO에 저장될 수 있는 데이터 개수를 의미한다.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mermaid</title>
      <link>https://egghwan.github.io/docs/rtl-ip/mermaid/</link>
      <pubDate>Fri, 08 Sep 2023 05:12:51 +0100</pubDate>
      <guid>https://egghwan.github.io/docs/rtl-ip/mermaid/</guid>
      <description>&lt;h2 id=&#34;flowchart&#34;&gt;Flowchart &lt;a href=&#34;#flowchart&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;flowchart LR&#xD;&#xA;&#xD;&#xA;A[Hard] --&amp;gt;|Text| B(Round)&#xD;&#xA;B --&amp;gt; C{Decision}&#xD;&#xA;C --&amp;gt;|One| D[Result 1]&#xD;&#xA;C --&amp;gt;|Two| E[Result 2]&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;sequence-diagram&#34;&gt;Sequence diagram &lt;a href=&#34;#sequence-diagram&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;sequenceDiagram&#xD;&#xA;Alice-&amp;gt;&amp;gt;John: Hello John, how are you?&#xD;&#xA;loop Healthcheck&#xD;&#xA;    John-&amp;gt;&amp;gt;John: Fight against hypochondria&#xD;&#xA;end&#xD;&#xA;Note right of John: Rational thoughts!&#xD;&#xA;John--&amp;gt;&amp;gt;Alice: Great!&#xD;&#xA;John-&amp;gt;&amp;gt;Bob: How about you?&#xD;&#xA;Bob--&amp;gt;&amp;gt;John: Jolly good!&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;gantt-chart&#34;&gt;Gantt Chart &lt;a href=&#34;#gantt-chart&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;gantt&#xD;&#xA;    section Section&#xD;&#xA;    Completed :done,    des1, 2014-01-06,2014-01-08&#xD;&#xA;    Active        :active,  des2, 2014-01-07, 3d&#xD;&#xA;    Parallel 1   :         des3, after des1, 1d&#xD;&#xA;    Parallel 2   :         des4, after des1, 1d&#xD;&#xA;    Parallel 3   :         des5, after des3, 1d&#xD;&#xA;    Parallel 4   :         des6, after des4, 1d&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;class-diagram&#34;&gt;Class diagram &lt;a href=&#34;#class-diagram&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;classDiagram&#xD;&#xA;Class01 &amp;lt;|-- AveryLongClass : Cool&#xD;&#xA;&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01&#xD;&#xA;Class09 --&amp;gt; C2 : Where am i?&#xD;&#xA;Class09 --* C3&#xD;&#xA;Class09 --|&amp;gt; Class07&#xD;&#xA;Class07 : equals()&#xD;&#xA;Class07 : Object[] elementData&#xD;&#xA;Class01 : size()&#xD;&#xA;Class01 : int chimp&#xD;&#xA;Class01 : int gorilla&#xD;&#xA;class Class10 {&#xD;&#xA;  &amp;gt;&amp;gt;service&amp;gt;&amp;gt;&#xD;&#xA;  int id&#xD;&#xA;  size()&#xD;&#xA;}&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;state-diagram&#34;&gt;State diagram &lt;a href=&#34;#state-diagram&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;stateDiagram-v2&#xD;&#xA;[*] --&amp;gt; Still&#xD;&#xA;Still --&amp;gt; [*]&#xD;&#xA;Still --&amp;gt; Moving&#xD;&#xA;Moving --&amp;gt; Still&#xD;&#xA;Moving --&amp;gt; Crash&#xD;&#xA;Crash --&amp;gt; [*]&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;pie-chart&#34;&gt;Pie Chart &lt;a href=&#34;#pie-chart&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;pie&#xD;&#xA;&amp;#34;Dogs&amp;#34; : 386&#xD;&#xA;&amp;#34;Cats&amp;#34; : 85.9&#xD;&#xA;&amp;#34;Rats&amp;#34; : 15&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;git-graph&#34;&gt;Git Graph &lt;a href=&#34;#git-graph&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;    gitGraph&#xD;&#xA;      commit&#xD;&#xA;      commit&#xD;&#xA;      branch develop&#xD;&#xA;      checkout develop&#xD;&#xA;      commit&#xD;&#xA;      commit&#xD;&#xA;      checkout main&#xD;&#xA;      merge develop&#xD;&#xA;      commit&#xD;&#xA;      commit&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;bar-chart-using-gantt-chart&#34;&gt;Bar chart (using gantt chart) &lt;a href=&#34;#bar-chart-using-gantt-chart&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;gantt&#xD;&#xA;    title Git Issues - days since last update&#xD;&#xA;    dateFormat  X&#xD;&#xA;    axisFormat %s&#xD;&#xA;&#xD;&#xA;    section Issue19062&#xD;&#xA;    71   : 0, 71&#xD;&#xA;    section Issue19401&#xD;&#xA;    36   : 0, 36&#xD;&#xA;    section Issue193&#xD;&#xA;    34   : 0, 34&#xD;&#xA;    section Issue7441&#xD;&#xA;    9    : 0, 9&#xD;&#xA;    section Issue1300&#xD;&#xA;    5    : 0, 5&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;user-journey-diagram&#34;&gt;User Journey diagram &lt;a href=&#34;#user-journey-diagram&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;  journey&#xD;&#xA;    title My working day&#xD;&#xA;    section Go to work&#xD;&#xA;      Make tea: 5: Me&#xD;&#xA;      Go upstairs: 3: Me&#xD;&#xA;      Do work: 1: Me, Cat&#xD;&#xA;    section Go home&#xD;&#xA;      Go downstairs: 5: Me&#xD;&#xA;      Sit down: 3: Me&#xA;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;c4-diagram&#34;&gt;C4 diagram &lt;a href=&#34;#c4-diagram&#34; class=&#34;anchor&#34; aria-hidden=&#34;true&#34;&gt;&lt;i class=&#34;material-icons align-middle&#34;&gt;link&lt;/i&gt;&lt;/a&gt;&lt;/h2&gt;&lt;pre class=&#34;mermaid&#34;&gt;C4Context&#xD;&#xA;title System Context diagram for Internet Banking System&#xD;&#xA;&#xD;&#xA;Person(customerA, &amp;#34;Banking Customer A&amp;#34;, &amp;#34;A customer of the bank, with personal bank accounts.&amp;#34;)&#xD;&#xA;Person(customerB, &amp;#34;Banking Customer B&amp;#34;)&#xD;&#xA;Person_Ext(customerC, &amp;#34;Banking Customer C&amp;#34;)&#xD;&#xA;System(SystemAA, &amp;#34;Internet Banking System&amp;#34;, &amp;#34;Allows customers to view information about their bank accounts, and make payments.&amp;#34;)&#xD;&#xA;&#xD;&#xA;Person(customerD, &amp;#34;Banking Customer D&amp;#34;, &amp;#34;A customer of the bank, &amp;lt;br/&amp;gt; with personal bank accounts.&amp;#34;)&#xD;&#xA;&#xD;&#xA;Enterprise_Boundary(b1, &amp;#34;BankBoundary&amp;#34;) {&#xD;&#xA;&#xD;&#xA;  SystemDb_Ext(SystemE, &amp;#34;Mainframe Banking System&amp;#34;, &amp;#34;Stores all of the core banking information about customers, accounts, transactions, etc.&amp;#34;)&#xD;&#xA;&#xD;&#xA;  System_Boundary(b2, &amp;#34;BankBoundary2&amp;#34;) {&#xD;&#xA;    System(SystemA, &amp;#34;Banking System A&amp;#34;)&#xD;&#xA;    System(SystemB, &amp;#34;Banking System B&amp;#34;, &amp;#34;A system of the bank, with personal bank accounts.&amp;#34;)&#xD;&#xA;  }&#xD;&#xA;&#xD;&#xA;  System_Ext(SystemC, &amp;#34;E-mail system&amp;#34;, &amp;#34;The internal Microsoft Exchange e-mail system.&amp;#34;)&#xD;&#xA;  SystemDb(SystemD, &amp;#34;Banking System D Database&amp;#34;, &amp;#34;A system of the bank, with personal bank accounts.&amp;#34;)&#xD;&#xA;&#xD;&#xA;  Boundary(b3, &amp;#34;BankBoundary3&amp;#34;, &amp;#34;boundary&amp;#34;) {&#xD;&#xA;    SystemQueue(SystemF, &amp;#34;Banking System F Queue&amp;#34;, &amp;#34;A system of the bank, with personal bank accounts.&amp;#34;)&#xD;&#xA;    SystemQueue_Ext(SystemG, &amp;#34;Banking System G Queue&amp;#34;, &amp;#34;A system of the bank, with personal bank accounts.&amp;#34;)&#xD;&#xA;  }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;BiRel(customerA, SystemAA, &amp;#34;Uses&amp;#34;)&#xD;&#xA;BiRel(SystemAA, SystemE, &amp;#34;Uses&amp;#34;)&#xD;&#xA;Rel(SystemAA, SystemC, &amp;#34;Sends e-mails&amp;#34;, &amp;#34;SMTP&amp;#34;)&#xD;&#xA;Rel(SystemC, customerA, &amp;#34;Sends e-mails to&amp;#34;)&#xA;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
